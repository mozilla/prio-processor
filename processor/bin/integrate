#!/bin/bash

# This script controls the docker-compose workflow for integration testing. The
# containers are defined in the docker-compose.yml, but are orchestrated through
# this script for verification.

set -euo pipefail

docker-compose up -d

function clean_buckets {
    docker-compose run server_a bin/cleanup
    docker-compose run server_b bin/cleanup
}

# Add a cleanup handler for the exit signal
function cleanup {
    clean_buckets
    docker-compose down
}
trap cleanup EXIT

# Start server A
docker-compose run server_a bin/process &
server_a_pid=$!

# Start server B
docker-compose run server_b bin/process &
server_b_pid=$!

# Copy data into the appropriate buckets
docker-compose run admin bin/generate

# Return the exit code of the backgrounded docker-compose container. Since
# `wait` is a blocking function, a failure in server B will not be detected
# until timeout in server A.
wait $server_a_pid
wait $server_b_pid

docker-compose run admin bin/insert
